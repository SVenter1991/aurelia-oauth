"use strict";
var aurelia_router_1 = require("aurelia-router");
var aurelia_http_client_1 = require("aurelia-http-client");
var oauth_service_1 = require("./oauth-service");
exports.OAuthService = oauth_service_1.OAuthService;
var oauth_token_service_1 = require("./oauth-token-service");
exports.OAuthTokenService = oauth_token_service_1.OAuthTokenService;
var oauth_interceptor_1 = require("./oauth-interceptor");
exports.OAuthInterceptor = oauth_interceptor_1.default;
var oauth_authorize_step_1 = require("./oauth-authorize-step");
function configure(framework, config) {
    var oauthService = framework.container.get(oauth_service_1.OAuthService);
    var oauthTokenService = framework.container.get(oauth_token_service_1.OAuthTokenService);
    var httpClient = framework.container.get(aurelia_http_client_1.HttpClient);
    var oauthInterceptor = framework.container.get(oauth_interceptor_1.default);
    config(oauthService, oauthTokenService);
    httpClient.configure(function (builder) { return builder.withInterceptor(oauthInterceptor); });
    framework.aurelia.start().then(function () {
        oauthService.setTokenOnRedirect();
        var appRouter = framework.container.get(aurelia_router_1.AppRouter);
        appRouter.pipelineProvider.steps.splice(2, 0, oauth_authorize_step_1.OAuthAuthorizeStep);
    });
}
exports.configure = configure;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1cmVsaWEtb2F1dGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGlEQUEyQztBQUMzQywyREFBaUQ7QUFFakQsaURBQStDO0FBMEI3QyxvREFBWTtBQXpCZCw2REFBMEQ7QUEwQnhELG9FQUFpQjtBQXpCbkIseURBQW1EO0FBMEJqRCx1REFBZ0I7QUF6QmxCLCtEQUE0RDtBQUU1RCxtQkFBMEIsU0FBaUMsRUFBRSxNQUFpRDtJQUUxRyxJQUFNLFlBQVksR0FBaUIsU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsNEJBQVksQ0FBQyxDQUFDO0lBQ3pFLElBQU0saUJBQWlCLEdBQXNCLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHVDQUFpQixDQUFDLENBQUM7SUFDeEYsSUFBTSxVQUFVLEdBQWUsU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsZ0NBQVUsQ0FBQyxDQUFDO0lBQ25FLElBQU0sZ0JBQWdCLEdBQXFCLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLDJCQUFnQixDQUFDLENBQUM7SUFFckYsTUFBTSxDQUFDLFlBQVksRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0lBRXhDLFVBQVUsQ0FBQyxTQUFTLENBQUMsVUFBQSxPQUFPLElBQUksT0FBQSxPQUFPLENBQUMsZUFBZSxDQUFDLGdCQUFnQixDQUFDLEVBQXpDLENBQXlDLENBQUMsQ0FBQztJQUUzRSxTQUFTLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQztRQUM3QixZQUFZLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztRQUdsQyxJQUFJLFNBQVMsR0FBYyxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQywwQkFBUyxDQUFDLENBQUM7UUFDeEQsU0FBVSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSx5Q0FBa0IsQ0FBQyxDQUFDO0lBQzNFLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQWxCRCw4QkFrQkMiLCJmaWxlIjoiYXVyZWxpYS1vYXV0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZyYW1ld29ya0NvbmZpZ3VyYXRpb24gfSBmcm9tICdhdXJlbGlhLWZyYW1ld29yayc7XHJcbmltcG9ydCB7IEFwcFJvdXRlciB9IGZyb20gJ2F1cmVsaWEtcm91dGVyJztcclxuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ2F1cmVsaWEtaHR0cC1jbGllbnQnO1xyXG5cclxuaW1wb3J0IHsgT0F1dGhTZXJ2aWNlIH0gZnJvbSAnLi9vYXV0aC1zZXJ2aWNlJztcclxuaW1wb3J0IHsgT0F1dGhUb2tlblNlcnZpY2UgfSBmcm9tICcuL29hdXRoLXRva2VuLXNlcnZpY2UnO1xyXG5pbXBvcnQgT0F1dGhJbnRlcmNlcHRvciBmcm9tICcuL29hdXRoLWludGVyY2VwdG9yJztcclxuaW1wb3J0IHsgT0F1dGhBdXRob3JpemVTdGVwIH0gZnJvbSAnLi9vYXV0aC1hdXRob3JpemUtc3RlcCc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY29uZmlndXJlKGZyYW1ld29yazogRnJhbWV3b3JrQ29uZmlndXJhdGlvbiwgY29uZmlnOiAob2F1dGhTZXJ2aWNlLCBvYXV0aFRva2VuU2VydmljZSkgPT4gdm9pZCkge1xyXG5cclxuICAgIGNvbnN0IG9hdXRoU2VydmljZSA9IDxPQXV0aFNlcnZpY2U+ZnJhbWV3b3JrLmNvbnRhaW5lci5nZXQoT0F1dGhTZXJ2aWNlKTtcclxuICAgIGNvbnN0IG9hdXRoVG9rZW5TZXJ2aWNlID0gPE9BdXRoVG9rZW5TZXJ2aWNlPmZyYW1ld29yay5jb250YWluZXIuZ2V0KE9BdXRoVG9rZW5TZXJ2aWNlKTtcclxuICAgIGNvbnN0IGh0dHBDbGllbnQgPSA8SHR0cENsaWVudD5mcmFtZXdvcmsuY29udGFpbmVyLmdldChIdHRwQ2xpZW50KTtcclxuICAgIGNvbnN0IG9hdXRoSW50ZXJjZXB0b3IgPSA8T0F1dGhJbnRlcmNlcHRvcj5mcmFtZXdvcmsuY29udGFpbmVyLmdldChPQXV0aEludGVyY2VwdG9yKTtcclxuXHJcbiAgICBjb25maWcob2F1dGhTZXJ2aWNlLCBvYXV0aFRva2VuU2VydmljZSk7XHJcblxyXG4gICAgaHR0cENsaWVudC5jb25maWd1cmUoYnVpbGRlciA9PiBidWlsZGVyLndpdGhJbnRlcmNlcHRvcihvYXV0aEludGVyY2VwdG9yKSk7XHJcblxyXG4gICAgZnJhbWV3b3JrLmF1cmVsaWEuc3RhcnQoKS50aGVuKCgpID0+IHtcclxuICAgICAgb2F1dGhTZXJ2aWNlLnNldFRva2VuT25SZWRpcmVjdCgpO1xyXG5cclxuICAgICAgLy8gQWRkIGF1dGhvcml6ZSBzdGVwIGJlZm9yZSB2aWV3LW1vZGVsIGFjdGl2YXRlIHByZWRlZmluZWQgcGlwZWxpbmUgc3RlcFxyXG4gICAgICBsZXQgYXBwUm91dGVyID0gPEFwcFJvdXRlcj5mcmFtZXdvcmsuY29udGFpbmVyLmdldChBcHBSb3V0ZXIpO1xyXG4gICAgICAoPGFueT5hcHBSb3V0ZXIpLnBpcGVsaW5lUHJvdmlkZXIuc3RlcHMuc3BsaWNlKDIsIDAsIE9BdXRoQXV0aG9yaXplU3RlcCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZXhwb3J0IHtcclxuICBPQXV0aFNlcnZpY2UsXHJcbiAgT0F1dGhUb2tlblNlcnZpY2UsXHJcbiAgT0F1dGhJbnRlcmNlcHRvclxyXG59Il19
